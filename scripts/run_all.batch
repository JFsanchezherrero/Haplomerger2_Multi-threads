#!/bin/bash
#$ -cwd
#$ -V

#### ===========================================================================
#### IMPORTANT NOTE:
#### For raw diploid assembly with >2000 scaffold sequences, 
### make sure to lift your system¡¯s openable file handle limit by invocating
#### ¡°ulimit ¨Cn 655350¡± before running HM2 (root privilege required)!
#### ===========================================================================

#### ===========================================================================
#### set the path to executables
#### ===========================================================================
#PATH=/path/to/perl/bin/:/path/to/chainNet/:/path/to/lastz/:/path/to/gapCloser/:/path/to/sspace/:$PATH
#echo $PATH

## $1 genome 
## $2 threads

#### ===========================================================================
#### step 1: break the misjoins and output the new diploid assembly
#### ===========================================================================
#### default input:        ./{assembly_name}.fa.gz
#### default final output: ./{assembly_name}_A.fa.gz
hm.batchA1.initiation_and_all_lastz  $1 $2
hm.batchA2.chainNet_and_netToMaf     $1 $2
hm.batchA3.misjoin_processing        $1

#### ===========================================================================
#### step 2: separate/merge two alleles and output haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_A.fa.gz
#### default final output: ./{assembly_name}_A_ref.fa.gz
#### default final output: ./{assembly_name}_A_alt.fa.gz
hm.batchB1.initiation_and_all_lastz             $1"_A" $2
hm.batchB2.chainNet_and_netToMaf                $1"_A" $2
hm.batchB3.haplomerger                          $1"_A"
hm.batchB4.refine_unpaired_sequences            $1"_A" $2
hm.batchB5.merge_paired_and_unpaired_sequences  $1"_A"

#### ===========================================================================
#### step 3: further scaffold the obtained haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_A_ref.fa.gz
#### default final output: ./{assembly_name}_A_ref_C.fa.gz
#### default final output: ./{assembly_name}_A_alt_C.fa.gz

hm.batchC1.hierarchical_scaffolding                      $1"_A_ref" $2
hm.batchC2.update_reference_and_alternative_assemblies   $1"_A_ref" $2

#### ===========================================================================
#### step 4: remove tandem errors from haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_A_ref_C.fa.gz
#### default final output: ./{assembly_name}_A_ref_C_D.fa.gz

hm.batchD1.initiation_and_all_lastz     $1"_A_ref_C" $2
hm.batchD2.chainNet_and_netToMaf        $1"_A_ref_C" $2
hm.batchD3.remove_tandem_assemblies     $1"_A_ref_C"

#### ===========================================================================
#### step 5: try to close Ngaps in haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_A_ref_C_D.fa.gz
#### default final output: ./{assembly_name}_A_ref_C_D_E.fa.gz

hm.batchE1.wrapper_for_gapCloser_v1.12  $1"_A_ref_C_D" $2
